version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      - db
      - redis
    volumes:
      - documind-data:/app/data
      - ./logs:/app/logs
    env_file:
      - .env.docker
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - REDIS_HOST=redis
    networks:
      - documind-network

  # Database service
  db:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/db/init:/docker-entrypoint-initdb.d
    env_file:
      - .env.docker
    environment:
      - POSTGRES_USER=${DB_USER:-documind}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-documind}
      - POSTGRES_DB=${DB_NAME:-documind}
    networks:
      - documind-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER:-documind}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and session storage
  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - documind-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx for serving static files and reverse proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./public:/usr/share/nginx/html:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - documind-network

  # Backup service (scheduled backups)
  backup:
    build:
      context: ./docker/backup
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - documind-data:/data/app:ro
      - postgres-data:/data/db:ro
      - backups:/backups
    environment:
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 0 * * *}  # Default: everyday at midnight
      - POSTGRES_HOST=db
      - POSTGRES_USER=${DB_USER:-documind}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-documind}
      - POSTGRES_DB=${DB_NAME:-documind}
      - RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-7}
    networks:
      - documind-network

networks:
  documind-network:
    driver: bridge

volumes:
  documind-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  backups:
    driver: local
