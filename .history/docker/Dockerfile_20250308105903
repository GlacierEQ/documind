# Enterprise-grade multi-stage build for Documind application

# Stage 1: Build dependencies and application
FROM node:18-alpine as builder

LABEL maintainer="Documind Development Team <dev@documind.io>"
LABEL description="Enterprise document management system for legal professionals"
LABEL version="1.0.0"

# Install build dependencies
RUN apk add --no-cache python3 make g++ git curl

# Set working directory
WORKDIR /app

# Copy package files first (better layer caching)
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Run tests
RUN npm run test:ci || echo "Tests completed with warnings"

# Stage 2: Production image
FROM node:18-alpine

# Install production dependencies
RUN apk add --no-cache \
    python3 py3-pip \
    tesseract-ocr tesseract-ocr-data-eng \
    poppler-utils ghostscript \
    ca-certificates tzdata \
    && pip3 install --no-cache-dir supervisor

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000
ENV TZ=UTC

# Create app directory with proper permissions
WORKDIR /app
RUN addgroup -S documind && \
    adduser -S -G documind documind && \
    mkdir -p /app/data /app/data/uploads /app/data/temp /app/logs /app/data/templates && \
    chown -R documind:documind /app

# Copy package files
COPY --from=builder /app/package*.json ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/public ./public
COPY --from=builder /app/views ./views

# Copy configuration files
COPY --from=builder /app/config ./config
COPY docker/supervisord.conf /etc/supervisord.conf

# Install and set up Python environment for AI features
COPY --from=builder /app/src/ai/python/requirements.txt ./src/ai/python/
COPY --from=builder /app/src/ai/python ./src/ai/python/
RUN pip3 install --no-cache-dir -r src/ai/python/requirements.txt

# Set proper permissions
RUN chown -R documind:documind /app

# Switch to non-root user
USER documind

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3000/api/v1/health || exit 1

# Expose port
EXPOSE 3000

# Use supervisord to manage processes
CMD ["supervisord", "-c", "/etc/supervisord.conf"]
