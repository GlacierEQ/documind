name: Ninja Team Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - production
          - staging
          - development
      tag:
        description: 'Docker image tag'
        required: true
        default: 'latest'
      mode:
        description: 'Deployment mode'
        required: true
        default: 'compose'
        type: choice
        options:
          - swarm
          - compose
          - k8s
          - auto
      security_scan:
        description: 'Run security scan'
        required: false
        default: true
        type: boolean

  push:
    branches:
      - main
      - master
    paths-ignore:
      - '**.md'
      - 'docs/**'

env:
  DEFAULT_TAG: ${{ github.sha }}
  DEFAULT_ENV: staging

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.tag }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Set image tag
        id: set_tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${DEFAULT_TAG}" >> $GITHUB_OUTPUT
          fi
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          tags: documind:${{ steps.set_tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Test application
        run: |
          docker run --rm documind:${{ steps.set_tag.outputs.tag }} npm test
          
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.security_scan == 'true' || github.event_name == 'push' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up environment
        run: |
          chmod +x ./scripts/*.sh
          mkdir -p logs/ninja-deployment
          
      - name: Run security scan
        run: |
          ./scripts/ninja-scan.sh --env=${{ github.event.inputs.environment || env.DEFAULT_ENV }} --quick
          
      - name: Upload scan results
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: reports/security/
          retention-days: 7
          
  deploy:
    name: Deploy with Ninja Team
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: ${{ success() && (github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
    environment: ${{ github.event.inputs.environment || env.DEFAULT_ENV }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup environment
        run: |
          chmod +x ./scripts/*.sh
          chmod +x ./scripts/ninja-team/*.sh
          mkdir -p logs/ninja-deployment/${{ github.event.inputs.environment || env.DEFAULT_ENV }}
          
      - name: Deploy with Ninja Team
        run: |
          ./scripts/deploy-ninja-team.sh \
            --env=${{ github.event.inputs.environment || env.DEFAULT_ENV }} \
            --tag=${{ needs.build.outputs.image_tag }} \
            --mode=${{ github.event.inputs.mode || 'auto' }} \
            --yes
          
      - name: Upload deployment logs
        uses: actions/upload-artifact@v3
        with:
          name: deployment-logs
          path: logs/ninja-deployment/${{ github.event.inputs.environment || env.DEFAULT_ENV }}
          retention-days: 7
          
  monitor:
    name: Monitor Deployment
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup environment
        run: |
          chmod +x ./scripts/*.sh
          mkdir -p logs/monitoring
          
      - name: Monitor deployment
        run: |
          ./scripts/monitor-deployment.sh \
            --env=${{ github.event.inputs.environment || env.DEFAULT_ENV }} \
            --duration=300 \
            --interval=10
            
      - name: Upload monitoring logs
        uses: actions/upload-artifact@v3
        with:
          name: monitoring-logs
          path: logs/monitoring/
          retention-days: 7
